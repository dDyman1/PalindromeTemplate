/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package PalindromeTemplate;

import org.junit.Assert;
import org.junit.Test;

import java.io.ByteArrayInputStream;
import java.io.ByteArrayOutputStream;
import java.io.InputStream;
import java.io.PrintStream;

import static org.junit.Assert.*;

public class PalindromeTest {

    private final PrintStream standardOut = System.out;
    private final ByteArrayOutputStream outputStreamCapture = new ByteArrayOutputStream();
    private final InputStream originalIn = System.in;
    private final InputStream in = new ByteArrayInputStream("Fish racecar kebbab exit".getBytes());

    public void setUp() {
        System.setOut(new PrintStream(outputStreamCapture));
        System.setIn(in);
    }

    @Test
    public void TestIO() {
        setUp();
        Palindrome.main(null);

        String expected = "cec\r\n" +
                "aceca\r\n" +
                "racecar\r\n" +
                "bb\r\n" +
                "bab";

        assertEquals(expected, outputStreamCapture.toString().trim());

    }

    @Test
    public void TestErrorThrow(){
        try{
            Palindrome.findPalindromes(null);
        }
        catch(Exception e){
            assertEquals("Parameter 'word' is missing", e.getMessage());
        }
    }

    @Test
    public void TestPalindromeFinder(){
        String[] words = {"racecar", "fish", "kebbab"};
        int[] actual = new int[words.length];
        for(int i = 0; i<words.length; i++){
             actual[i]= Palindrome.findPalindromes(words[i]).size();
        }
        assertEquals(3, actual[0]);
        assertEquals(0, actual[1]);
        assertEquals(2, actual[2]);
    }
}
